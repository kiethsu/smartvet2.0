<%
  // add this just below your existing var declarations
  var petDetails = typeof petDetails !== 'undefined'
    ? petDetails
    : { species: [], speciesBreeds: {}, diseases: [], services: [] };
%>

<%
  // === Format date as "YYYY-MM-DD" ===
  function formatLocalDate(dateStr) {
    var d     = new Date(dateStr),
        month = '' + (d.getMonth() + 1),
        day   = '' + d.getDate(),
        year  = d.getFullYear();
    if (month.length < 2) month = '0' + month;
    if (day.length   < 2) day   = '0' + day;
    return [year, month, day].join('-');
  }

  // === Format "HH:MM" or "HH:MM AM/PM" â†’ "h:mm AM/PM" (no double suffix) ===
  function formatTime(timeStr) {
    var t      = timeStr.trim().toUpperCase().replace(/\s?(AM|PM)$/, ''),
        parts  = t.split(':'),
        h      = parseInt(parts[0], 10),
        m      = parts[1] || '00',
        suffix = h < 12 ? 'AM' : 'PM',
        hour12 = h % 12 === 0 ? 12 : h % 12;
    return hour12 + ':' + m + ' ' + suffix;
  }

  // === Build & sort only pending by date then time ===
  var pendingReservations = reservations
    .filter(r => r.status === 'Pending')
    .sort(function(a, b) {
      var d1 = new Date(a.date),
          d2 = new Date(b.date);
      if (d1 - d2) return d1 - d2;
      return a.time.replace(/\s?(AM|PM)$/i,'')
                   .localeCompare(b.time.replace(/\s?(AM|PM)$/i,''));
    });

  // === Build historyReservations ===
  var historyReservations = reservations.filter(r =>
    r.status === 'Done' || r.status === 'Not Attended'
  );
%>

<div class="container-fluid reservation-container">
<style>
  /* Reservation Content Styles */
  .reservation-container {
    background-color: #f7f7f7;
    min-height: 100vh;
    padding: 2rem;
  }
  .card {
    background: #fff;
    border: none;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    margin-bottom: 1.5rem;
    overflow: visible;
  }
  .table th,
  .table td {
    vertical-align: middle;
    padding: 0.75rem;
  }
  .btn-link {
    font-weight: 500;
    color: #2a9d8f;
    font-size: 14px;
  }
  .btn-link:hover {
    text-decoration: none;
    color: #237c67;
  }
  /* Fixed height container for tables */
  .fixed-table-container {
    height: 300px; /* adjust as needed */
    overflow-y: auto;
  }
  /* Approved Reservations styling */
  .approved-table-wrapper {
    max-height: 500px;
    overflow-y: auto;
    overflow-x: visible;
  }
  .approved-reservations .table-responsive table {
    width: 100%;
    table-layout: fixed;
  }
  /* Equal-width columns for Owner/Details/Actions */
  .approved-reservations .table-responsive table thead th {
    width: 33.33%;
    text-align: center;
  }
  .approved-reservations .table-responsive table thead th:first-child {
    text-align: left;
  }
  .approved-reservations th,
  .approved-reservations td {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  /* Medication column */
  .medication-column {
    min-width: 140px;
    text-align: center;
  }
  /* Datepicker highlighting */
  .has-appointment a {
    background-color: #2a9d8f !important;
    color: #fff !important;
  }
  .no-appointment a {
    background-color: #d9534f !important;
    color: #fff !important;
  }
  /* Dropdown on top */
  .dropdown-menu {
    z-index: 2000;
  }
  /* Navigation tab styling */
  .tab-link {
    cursor: pointer;
    padding: 5px 10px;
    text-decoration: none;
    color: #2a9d8f;
    font-size: 14px;
  }
  .tab-link.active {
    font-weight: bold;
    border-bottom: 2px solid #2a9d8f;
  }
  /* Header buttons in left column */
  .header-buttons {
    font-size: 14px;
  }
  .header-buttons button {
    margin-right: 5px;
  }
  /* Search box styling */
  .search-box {
    width: 430px;
    margin-left: 0;
    height: 30px;
  }
  /* Equal button class for consistent sizing */
  .equal-btn {
    width: 120px;
  }
  /* Center the Assign-Doctor (and other action) buttons */
  .actions-column {
    text-align: center;
  }
</style>

   <!-- Optional debug output -->
  <div id="doctorsDebug" style="display:none;"><%= JSON.stringify(doctors) %></div>
  
  <!-- Content Header -->
  <div class="content-header mb-4">
    <h3 class="font-weight-bold text-dark" style="font-size: 18px;">Appointments</h3>
  </div>
  
  <div class="row">
    <!-- Left Column: Pending Appointments & History -->
    <div class="col-lg-6">
      <!-- Pending Appointments Card -->
      <div class="card p-4 shadow-sm mb-4">
        <!-- Header: Buttons & Search -->
        <div class="d-flex justify-content-between align-items-center header-buttons mb-3">
          <div>
            <button class="btn btn-link" id="btnToday">Today</button>
            <button class="btn btn-link" id="btnSelectDate">Select Date</button>
            <button class="btn btn-success btn-sm" id="toggleHistory">History</button>
          </div>
          <input type="text" class="form-control form-control-sm search-box" id="searchInput" placeholder="Search">
        </div>
        <!-- Hidden datepicker container -->
        <div id="datepickerContainer" class="mb-3" style="display: none;">
          <input type="text" id="datepicker" class="form-control">
        </div>
        
        <!-- Pending Appointments Table -->
        <div class="table-responsive fixed-table-container">
          <table class="table table-hover mb-0">
            <thead>
              <tr>
                <th>Owner Name</th>
                <th>Time</th>    
                <th>Service</th>
                <th class="text-center">Details</th>
                <th class="text-center">Action</th>
              </tr>
            </thead>
            <tbody id="appointmentsTableBody">
              <% pendingReservations.forEach(function(reservation) { %>
                <tr id="reservation-<%= reservation._id %>"
                    data-date="<%= formatLocalDate(reservation.date) %>"
                    data-time="<%= reservation.time.split(':')[0] %>">
                  <td class="ownerName"><%= reservation.ownerName %></td>
                  <td><%= formatTime(reservation.time) %></td>
                  <td><%= reservation.service %></td>
                  <td class="text-center">
                    <button class="btn btn-info btn-sm equal-btn mx-auto d-block"
                            onclick="viewReservation('<%= reservation._id %>')">
                      View
                    </button>
                  </td>
                  <td class="text-center">
                    <button class="btn btn-success btn-sm equal-btn mx-auto d-block"
                            onclick="approveReservation('<%= reservation._id %>')">
                      Approve
                    </button>
                  </td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
      </div>

      <!-- Reservation History Card -->
      <div class="card p-4 shadow-sm mb-4" id="historySection" style="display: none;">
        <h4 class="font-weight-bold mb-3" style="font-size: 16px;">Reservation History</h4>
        <div class="table-responsive fixed-table-container">
          <table class="table table-hover mb-0">
            <thead>
              <tr>
                <th>Owner Name</th>
                <th>Time</th>
                <th>Service</th>
                <th>Status</th>
                <th class="text-center">Details</th>
              </tr>
            </thead>
            <tbody>
              <% if (historyReservations.length > 0) { %>
                <% historyReservations.forEach(function(reservation) { %>
                  <tr data-date="<%= formatLocalDate(reservation.date) %>">
                    <td><%= reservation.ownerName %></td>
                    <td><%= formatTime(reservation.time) %></td>
                    <td><%= reservation.service %></td>
                    <td class="text-center">
                      <span class="badge badge-<%= reservation.status === 'Not Attended' ? 'danger' : 'success' %>">
                        <%= reservation.status === 'Not Attended' ? 'Not Attended' : 'Done' %>
                      </span>
                    </td>
                    <td class="text-center">
                      <button class="btn btn-info btn-sm equal-btn"
                              onclick="viewReservation('<%= reservation._id %>')">
                        View
                      </button>
                    </td>
                  </tr>
                <% }); %>
              <% } else { %>
                <tr>
                  <td colspan="5" class="text-center">No appointment history found.</td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div><!-- /.col-lg-6 -->

    <!-- Right Column: Approved & Ongoing -->
    <div class="col-lg-6">
      <div class="card p-4 shadow-sm mb-4 approved-reservations">
        <!-- Navigation Tabs -->
        <div class="d-flex align-items-center" style="font-size: 14px; margin-bottom: 10px;">
          <a href="#" id="approvedTab" class="tab-link active" style="margin-right: 10px;">Approved</a>
          <a href="#" id="ongoingTab" class="tab-link" style="margin-right: 10px;">Ongoing</a>
          <button type="button" class="btn btn-sm btn-success" data-toggle="modal" data-target="#plusModal">
            <i class="fas fa-plus"></i>
          </button>
          
        </div>
        <div class="approved-table-wrapper">
          <!-- Approved View -->
          <div id="approvedView">
            <div class="table-responsive fixed-table-container">
              <table class="table table-hover mb-0">
                <thead>
                  <tr>
                    <th>Owner Name</th>
                    <th class="text-center">Details</th>
                    <th class="actions-column">Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <% let approvedReservations = reservations.filter(r =>
                      (r.status === 'Approved' || r.status === 'Canceled') && !r.doctor
                  ); %>
                  <% if (approvedReservations.length > 0) { %>
                    <% approvedReservations.forEach(function(reservation) { %>
                      <tr id="approved-<%= reservation._id %>" data-date="<%= formatLocalDate(reservation.date) %>">
                        <td><%= reservation.ownerName %></td>
                        <td class="text-center">
                          <button class="btn btn-primary btn-sm equal-btn d-block mx-auto"
                                  onclick="viewReservation('<%= reservation._id %>')">
                            View
                          </button>
                        </td>
                        <td class="actions-column">
                          <% if (reservation.status === 'Canceled') { %>
                            <span class="badge badge-secondary">Canceled</span>
                          <% } else { %>
                            <div class="dropdown d-inline-block">
                              <button class="btn btn-primary btn-sm dropdown-toggle equal-btn"
                                      type="button" id="doctorDropdown-<%= reservation._id %>"
                                      data-toggle="dropdown" data-boundary="window">
                                Assign Doctor
                              </button>
                              <div class="dropdown-menu" aria-labelledby="doctorDropdown-<%= reservation._id %>">
                                <% if (doctors && doctors.length > 0) { %>
                                  <% doctors.forEach(function(doctor) { %>
                                    <a class="dropdown-item" href="#"
                                       onclick="assignDoctor('<%= reservation._id %>','<%= doctor._id %>')">
                                      <%= doctor.username %>
                                    </a>
                                  <% }); %>
                                <% } else { %>
                                  <span class="dropdown-item">No doctors available</span>
                                <% } %>
                              </div>
                            </div>
                          <% } %>
                        </td>
                      </tr>
                    <% }); %>
                  <% } else { %>
                    <tr>
                      <td colspan="3" class="text-center">No approved appointments found.</td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>

          <!-- Ongoing View -->
          <div id="ongoingView" style="display: none;">
            <div class="table-responsive fixed-table-container">
              <table class="table table-hover mb-0">
               <thead>
  <tr>
    <th>Owner Name</th>
    <th class="text-center">Doctor Name</th>
    <th class="text-center">Medication</th>
    <th class="text-center">Status</th>
    <th class="text-center">Action</th>
  </tr>
</thead>
                <tbody>
                  <% let ongoingReservations = reservations.filter(r => {
                      if (r.status === 'Done') return !r.petAdded;
                      return !!r.doctor;
                  }); %>
                  <% if (ongoingReservations.length > 0) { %>
                    <% ongoingReservations.forEach(function(reservation) { %>
                      <tr id="ongoing-<%= reservation._id %>" data-date="<%= formatLocalDate(reservation.date) %>">
                        <td><%= reservation.ownerName %></td>
                         <td class="text-center"><%= reservation.doctor?.username || 'N/A' %></td>
                        <td class="medication-column text-center">
                          <button class="btn btn-info btn-sm equal-btn d-block mx-auto"
                                  onclick="viewDetails('<%= reservation._id %>')">
                            View Details
                          </button>
                        </td>
                       <td class="text-center">
    <span class="badge badge-<%= reservation.status==='Done'?'success':'secondary' %>">
      <%= reservation.status==='Done'?'Done':'Ongoing' %>
    </span>
  </td>
                        <td>
                          <% if (reservation.status==='Done' && !reservation.petAdded) { %>
                            <% if (reservation.petExists) { %>
                              <button class="btn btn-warning btn-sm equal-btn"
                                      onclick="markAsDoneAndUpdate('<%= reservation._id %>')">
                                Done
                              </button>
                            <% } else { %>
                              <button class="btn btn-primary btn-sm equal-btn"
                                      onclick="addPetFromConsultation('<%= reservation._id %>')">
                                Add
                              </button>
                            <% } %>
                          <% } else { %>
                            N/A
                          <% } %>
                        </td>
                      </tr>
                    <% }); %>
                  <% } else { %>
                    <tr>
                      <td colspan="5" class="text-center">No ongoing appointments found.</td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

</div>

<!-- Modal for Viewing Consultation Details -->
<div class="modal fade" id="medicationModal" tabindex="-1" role="dialog" aria-labelledby="medicationModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="medicationModalLabel">Consultation Details</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body" id="medicationDetails">
        <!-- Consultation details will be loaded here -->
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<!-- Walk-In Reservation Modal -->
<div class="modal fade" id="plusModal" tabindex="-1" role="dialog" aria-labelledby="plusModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
    <div class="modal-content border-0 rounded-lg shadow">
      <div class="modal-header bg-primary text-white">
        <h5 class="modal-title" id="plusModalLabel">New Walk-In Reservation</h5>
        <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <form id="walkinForm">
        <div class="modal-body">
          <!-- Row 1: Owner & Pet -->
          <div class="form-row mb-3">
            <div class="form-group col-md-6">
              <label for="walkinOwner">Owner Name</label>
              <input type="text" class="form-control" id="walkinOwner" name="ownerName" required>
            </div>
            <div class="form-group col-md-6">
              <label for="walkinPetName">Pet Name</label>
              <input type="text" class="form-control" id="walkinPetName" name="petName" required>
            </div>
          </div>

          <!-- Row 2: Species / Breed / Sex / Existing Disease -->
          <div class="form-row mb-3">
            <div class="form-group col-md-3">
              <label for="walkinSpecies">Species</label>
              <select class="form-control" id="walkinSpecies" name="species" required>
                <option value="" disabled selected>Selectâ€¦</option>
                <% petDetails.species.forEach(s => { %>
                  <option value="<%= s %>"><%= s %></option>
                <% }) %>
              </select>
            </div>
            <div class="form-group col-md-3">
              <label for="walkinBreed">Breed</label>
              <select class="form-control" id="walkinBreed" name="breed" required>
                <option value="" disabled selected>Selectâ€¦</option>
              </select>
            </div>
            <div class="form-group col-md-3">
              <label for="walkinSex">Sex</label>
              <select class="form-control" id="walkinSex" name="sex" required>
                <option value="" disabled selected>Chooseâ€¦</option>
                <option>Male</option>
                <option>Female</option>
              </select>
            </div>
            <div class="form-group col-md-3">
              <label for="walkinDisease">Existing Disease</label>
              <select class="form-control" id="walkinDisease" name="existingDisease" required>
                <option value="" disabled selected>Selectâ€¦</option>
                <option value="None">None</option>
                <option value="Other">Other</option>
                <% petDetails.diseases.forEach(d => { %>
                  <option value="<%= d %>"><%= d %></option>
                <% }) %>
              </select>
              <input type="text" class="form-control mt-2 d-none" id="walkinOtherDisease"
                     name="otherDisease" placeholder="Specify other disease">
            </div>
          </div>

          <!-- Row 3: Service / Date / Time -->
          <div class="form-row mb-3">
            <div class="form-group col-md-4">
              <label for="walkinService">Service</label>
              <select class="form-control" id="walkinService" name="service" required>
                <option value="" disabled selected>Selectâ€¦</option>
                <% petDetails.services.forEach(svc => { %>
                  <option value="<%= svc %>"><%= svc %></option>
                <% }) %>
              </select>
            </div>
            <div class="form-group col-md-4">
              <label for="walkinDate">Date</label>
              <input type="date" class="form-control" id="walkinDate" name="date" required>
            </div>
            <div class="form-group col-md-4">
              <label for="walkinTime">Time</label>
              <input type="time" class="form-control" id="walkinTime" name="time" required>
            </div>
          </div>

          <!-- Row 4: Weight / Temperature / Other Observations -->
          <div class="form-row mb-3">
            <div class="form-group col-md-4">
              <label for="walkinWeight">Weight (kg)</label>
              <input type="number" step="0.1" class="form-control" id="walkinWeight" name="weight" placeholder="e.g. 12.5">
            </div>
            <div class="form-group col-md-4">
              <label for="walkinTemp">Temperature (Â°C)</label>
              <input type="number" step="0.1" class="form-control" id="walkinTemp" name="temperature" placeholder="e.g. 38.0">
            </div>
            <div class="form-group col-md-4">
              <label for="walkinObservations">Other Observations</label>
              <input type="text" class="form-control" id="walkinObservations" name="observations" placeholder="Any notesâ€¦">
            </div>
          </div>

          <!-- Row 5: Concerns (full width) -->
          <div class="form-group mb-0">
            <label for="walkinConcerns">Concerns</label>
            <textarea class="form-control" id="walkinConcerns" name="concerns" rows="2"
                      placeholder="Describe concernsâ€¦"></textarea>
          </div>
        </div>

        <div class="modal-footer bg-light">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          <button type="submit" class="btn btn-primary">Save Reservation</button>
        </div>
      </form>
    </div>
  </div>
</div>



<!-- jQuery, jQuery UI, Bootstrap -->
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script>window.petDetails = <%- JSON.stringify(petDetails) %>;</script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<!-- SweetAlert2 -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  // AJAX submit for walk-in form
  $('#walkinForm').on('submit', function(e) {
    e.preventDefault();
    $.post('/hr/walkin-reservation', $(this).serialize())
     .done(res => {
       if (res.success) {
         Swal.fire('Saved!','Walk-in reservation created.','success')
           .then(() => location.reload());
       } else {
         Swal.fire('Error', res.message||'Could not save.','error');
       }
     })
     .fail(()=> Swal.fire('Error','Server error.','error'));
  });
</script>
<script>
  // on species change, re-populate "Breed"
  $('#walkinSpecies').on('change', function() {
    const sp = this.value;
    const breeds = petDetails.speciesBreeds[sp]||[];
    const $b = $('#walkinBreed').empty().append('<option disabled selected>Selectâ€¦</option>');
    breeds.forEach(b => $b.append(`<option>${b}</option>`));
  });

  // show "Other" disease text input
  $('#walkinDisease').on('change', function(){
    $('#walkinOtherDisease')
      .toggleClass('d-none', this.value!=='Other')
      .prop('required', this.value==='Other');
  });
</script>


<script>
  // Global variable for the active date; default to today.
  var activeDate = new Date().toISOString().slice(0,10);

  function filterRows() {
    $('#appointmentsTableBody tr').each(function(){
      var rowDate = $(this).data('date');
      if (typeof rowDate === 'undefined') {
        $(this).show();
        return;
      }
      if (rowDate === activeDate) {
        $(this).show();
      } else {
        $(this).hide();
      }
    });
    $('#appointmentsTableBody tr.no-appointment').remove();
    if (
      $('#appointmentsTableBody tr')
        .filter(function(){
          return $(this).attr('data-date') !== undefined && $(this).is(':visible');
        })
        .length === 0
    ) {
  $('#appointmentsTableBody').append(
  '<tr class="no-appointment"><td colspan="5" class="text-center">No appointments found for the selected date.</td></tr>'
);
    }
  }
  
  $(document).ready(function () {
    $('.dropdown-toggle').dropdown();

    $('#toggleHistory').on('click', function () {
      $('#historySection').toggle();
    });

    $('#searchInput').on('keyup', function () {
      var searchValue = $(this).val().toLowerCase();
      $('#appointmentsTableBody tr').filter(function () {
        $(this).toggle($(this).find('.ownerName').text().toLowerCase().indexOf(searchValue) > -1);
      });
    });

    $('#btnToday').on('click', function () {
      activeDate = new Date().toISOString().slice(0,10);
      filterRows();
      $('#datepickerContainer').hide();
    });

    $('#btnSelectDate').on('click', function () {
      $('#datepickerContainer').toggle();
      if ($('#datepickerContainer').is(':visible')) {
        $("#datepicker").datepicker("show");
      }
    });

    var appointmentDates = {};
    var reservationsData = <%- JSON.stringify(reservations) %>;
    reservationsData.forEach(function (r) {
      if (r.status === 'Pending') {
        var d = new Date(r.date);
        var yyyy = d.getFullYear();
        var mm = ('0' + (d.getMonth() + 1)).slice(-2);
        var dd = ('0' + d.getDate()).slice(-2);
        var dateStr = yyyy + '-' + mm + '-' + dd;
        appointmentDates[dateStr] = true;
      }
    });

    $("#datepicker").datepicker({
      dateFormat: "yy-mm-dd",
      beforeShowDay: function (date) {
        var yyyy = date.getFullYear();
        var mm = ('0' + (date.getMonth() + 1)).slice(-2);
        var dd = ('0' + date.getDate()).slice(-2);
        var dateString = yyyy + '-' + mm + '-' + dd;
        return appointmentDates[dateString]
          ? [true, "has-appointment", "Pending appointments exist"]
          : [true, "no-appointment", "No pending appointments"];
      },
      onSelect: function (dateText) {
        activeDate = dateText;
        filterRows();
      }
    });
    
    filterRows();
    
    $('#approvedTab').on('click', function(e) {
      e.preventDefault();
      $(this).addClass('active');
      $('#ongoingTab').removeClass('active');
      $('#approvedView').show();
      $('#ongoingView').hide();
    });
    $('#ongoingTab').on('click', function(e) {
      e.preventDefault();
      $(this).addClass('active');
      $('#approvedTab').removeClass('active');
      $('#ongoingView').show();
      $('#approvedView').hide();
    });
  });

  function viewReservation(id) {
    // Reuse the same "viewDetails" function
    viewDetails(id);
  }
  
  // ---------- APPROVE RESERVATION ----------
  function approveReservation(reservationId) {
    Swal.fire({
      title: 'Approve Reservation?',
      text: 'Are you sure you want to approve this reservation?',
      icon: 'question',
      showCancelButton: true,
      confirmButtonText: 'Yes, approve',
      cancelButtonText: 'Cancel'
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          url: '/hr/approve-reservation',
          method: 'POST',
          data: { reservationId },
          success: function (response) {
            if (response.success) {
              Swal.fire({
                icon: 'success',
                title: 'Approved',
                text: 'Reservation has been approved.',
              }).then(() => {
                // remove from pending
                $('#reservation-' + reservationId).remove();
                location.reload();
              });
            } else {
              Swal.fire('Error', response.message || 'Error approving reservation.', 'error');
            }
          },
          error: function () {
            Swal.fire('Error', 'Server error while approving reservation.', 'error');
          }
        });
      }
    });
  }
  
  // ---------- ASSIGN DOCTOR ----------
  function assignDoctor(reservationId, doctorId) {
    $.ajax({
      url: '/hr/assign-doctor',
      method: 'POST',
      data: { reservationId, doctorId },
      success: function (response) {
        if (response.success) {
          Swal.fire({
            icon: 'success',
            title: 'Doctor Assigned',
            text: 'Reservation remains in Approved until marked as done.'
          }).then(() => {
            location.reload();
          });
        } else {
          Swal.fire('Error', response.message || 'Error assigning doctor.', 'error');
        }
      },
      error: function () {
        Swal.fire('Error', 'Server error while assigning doctor.', 'error');
      }
    });
  }
  
  // ---------- VIEW DETAILS ----------
  function formatBirthday(dateStr) {
    const date = new Date(dateStr);
    return date.toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' });
  }

  function viewDetails(reservationId) {
    $.ajax({
      url: '/hr/get-medication',
      method: 'GET',
      data: { reservationId: reservationId },
      success: function(response) {
        if (response.success) {
          let detailsHtml = '';
          if (response.reservation.pets && response.reservation.pets.length > 0) {
            let petObj = response.reservation.pets[0].petId || response.reservation.pets[0];
            detailsHtml += '<strong>Pet Name:</strong> ' + petObj.petName + '<br>';
            detailsHtml += '<strong>Pet Birthday:</strong> ' + 
                           (petObj.birthday ? formatBirthday(petObj.birthday) : 'N/A') + '<br>';
          }
          if (response.reservation.concerns) {
            detailsHtml += '<strong>Concerns:</strong> ' + response.reservation.concerns + '<br>';
          }
          if (response.reservation.time) {
            detailsHtml += '<strong>Time:</strong> ' + response.reservation.time + '<br>';
          }
          if (response.reservation.medications && response.reservation.medications.length > 0) {
            detailsHtml += '<hr><strong>Medication Details:</strong><br>';
            response.reservation.medications.forEach(function(med) {
              detailsHtml += '<strong>Medication:</strong> ' + med.medicationName + '<br>';
              detailsHtml += '<strong>Quantity:</strong> ' + med.quantity + '<br>';

              detailsHtml += '<strong>Dosage:</strong> ' + med.dosage + '<br>';
              detailsHtml += '<strong>Frequency:</strong> ' + med.frequency + '<br>';
              detailsHtml += '<strong>Admin Time:</strong> ' + med.adminTime + '<br>';
              if(med.additionalInstructions)
                detailsHtml += '<strong>Instructions:</strong> ' + med.additionalInstructions + '<br>';
              detailsHtml += '<hr>';
            });
          }
          $('#medicationDetails').html(detailsHtml);
          $('#medicationModal').modal('show');
        } else {
          Swal.fire('Error', response.message || 'Error fetching consultation details.', 'error');
        }
      },
      error: function() {
        Swal.fire('Error', 'Server error while fetching consultation details.', 'error');
      }
    });
  }

  // ---------- ADD/UPDATE PET FROM CONSULTATION ----------
  function addPetFromConsultation(reservationId) {
    Swal.fire({
      title: 'Add Pet?',
      text: 'Do you want to add this pet to the pet list?',
      icon: 'question',
      showCancelButton: true,
      confirmButtonText: 'Yes, add it',
      cancelButtonText: 'Cancel'
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          url: '/hr/add-pet-from-reservation',
          method: 'POST',
          data: { reservationId: reservationId },
          success: function(response) {
            if (response.success) {
              Swal.fire({
                title: 'Success',
                text: 'Pet successfully added!',
                icon: 'success'
              });
              // Remove row from the Ongoing table since pet is now added
              $('#ongoing-' + reservationId).remove();
            } else {
              Swal.fire('Error', response.message, 'error');
            }
          },
          error: function() {
            Swal.fire('Error', 'Server error while adding pet.', 'error');
          }
        });
      }
    });
  }

  // ---------- MARK AS DONE AND UPDATE PET FROM CONSULTATION ----------
  function markAsDoneAndUpdate(reservationId) {
    Swal.fire({
      title: 'Mark as Done?',
      text: 'Do you want to mark this consultation as done and update the pet details?',
      icon: 'question',
      showCancelButton: true,
      confirmButtonText: 'Yes, done',
      cancelButtonText: 'Cancel'
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          url: '/hr/update-pet-from-reservation',
          method: 'POST',
          data: { reservationId: reservationId },
          success: function(response) {
            if (response.success) {
              Swal.fire({
                title: 'Success',
                text: 'Consultation marked as done and pet details updated!',
                icon: 'success'
              }).then(() => {
                // If the pet has been added (petAdded is true), clear the row
                if(response.reservation && response.reservation.petAdded) {
                  $('#ongoing-' + reservationId).remove();
                } else {
                  // Otherwise, update the button back to "Add"
                  $('#ongoing-' + reservationId + ' button').first().text('Add');
                }
              });
            } else {
              Swal.fire('Error', response.message, 'error');
            }
          },
          error: function() {
            Swal.fire('Error', 'Server error while updating consultation.', 'error');
          }
        });
      }
    });
  }
</script>
