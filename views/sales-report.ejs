<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Sales Report</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <!-- Bootstrap, FontAwesome, Daterangepicker, Chart.js -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"/>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"/>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css"/>
  <style>
    body { background:#f8f9fa; font-family:'Helvetica Neue', Helvetica, Arial, sans-serif; }
    .top-header { margin:1.25rem 0 0.75rem; }
    .filters .form-control-sm { width:auto; min-width:6ch; margin-right:.6rem; }
    .card { border:none; border-radius:12px; box-shadow:0 2px 4px rgba(0,0,0,.06); margin-bottom:1rem; }
    .card-body { background:#fff; padding:1rem 1rem; }
    .kpi-card { background:#fff; border-radius:10px; box-shadow:0 1px 3px rgba(0,0,0,.08); padding:.9rem; min-width:140px; flex:1 1 140px; text-align:center; margin:.4rem .6rem .6rem 0; }
    .kpi-card h4 { margin:.15rem 0; font-weight:700; font-size:1.1rem; }
    .kpi-card small { display:block; color:#6c757d; font-size:.74rem; text-transform:uppercase; letter-spacing:.02em; }
    .kpi-card .kpi-sub { font-size:.85rem; color:#6c757d; margin-top:.1rem; }
    .up { color:#28a745; } .down { color:#e53e3e; } .neutral { color:#666; }
    .chart-container { position:relative; width:100%; min-height:220px; height:220px; margin-bottom:.4rem; }
    .table-borderless td, .table-borderless th { border:none; padding:.3rem .4rem; }
    .table-sm th, .table-sm td { font-size:13px; }
    .scroll-card { max-height:250px; overflow-y:auto; }
    .percent-cell { font-size:.95em; color:#6c757d; }
    @media (max-width: 900px){ .chart-container{ min-height:140px; height:140px; } }
  </style>
</head>
<body>
  <div class="container-fluid">
    <!-- Header -->
    <div class="d-flex align-items-center top-header">
      <h2 class="mb-0">Sales Report</h2>
      <div class="ml-auto d-flex align-items-center">
        <div class="filters d-flex align-items-center mr-2">
          <select id="presetRange" class="form-control form-control-sm">
            <option value="7d">Last 7 Days</option>
            <option value="30d">Last 30 Days</option>
            <option value="mtd">Month-to-Date</option>
            <option value="ytd">Year-to-Date</option>
            <option value="today">Today</option>
          </select>
          <input type="text" id="customRange" class="form-control form-control-sm" placeholder="Custom range"/>
          <select id="compareMode" class="form-control form-control-sm">
            <option value="prev">Compare Previous</option>
            <option value="yoy">Year-over-Year</option>
          </select>
        </div>
        <!-- Download buttons (routes fixed) -->
        <button id="btnXlsx" class="btn btn-success btn-sm mr-2"><i class="fas fa-file-excel"></i> Excel</button>
        <button id="btnCsv"  class="btn btn-info btn-sm mr-2"><i class="fas fa-file-csv"></i> CSV</button>
        <button id="btnPdf"  class="btn btn-danger btn-sm"><i class="fas fa-file-pdf"></i> PDF</button>
      </div>
    </div>

    <!-- KPI Row -->
    <div class="d-flex flex-wrap mb-2" id="summaryRow"></div>

    <!-- Grid -->
    <div class="row">
      <!-- Daily Revenue Trend -->
      <div class="col-lg-4 col-md-6 mb-3">
        <div class="card h-100">
          <div class="card-body">
            <h6 class="mb-2">Daily Revenue Trend</h6>
            <div class="chart-container">
              <canvas id="dailyChart"></canvas>
            </div>
          </div>
        </div>
      </div>
      <!-- Revenue by Service -->
      <div class="col-lg-4 col-md-6 mb-3">
        <div class="card h-100">
          <div class="card-body">
            <h6 class="mb-2">Revenue by Service</h6>
            <table class="table table-sm table-borderless mb-2" id="svcTable"></table>
            <div class="chart-container">
              <canvas id="svcChart"></canvas>
            </div>
          </div>
        </div>
      </div>
      <!-- Top Products -->
      <div class="col-lg-4 col-md-12 mb-3">
        <div class="card h-100">
          <div class="card-body">
            <h6 class="mb-2">Top 5 Products by Revenue</h6>
            <table class="table table-sm table-borderless" id="prodTable"></table>
            <div class="chart-container">
              <canvas id="prodChart"></canvas>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Recent Transactions -->
    <div class="row">
      <div class="col-lg-12 mb-3">
        <div class="card h-100 scroll-card">
          <div class="card-body">
            <h6 class="mb-2">Recent Transactions</h6>
            <table class="table table-sm table-bordered mb-0" id="txTable"></table>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- JS -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/moment@2.29.4/moment.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    // ------- Helpers -------
    function peso(n){ n = Number(n||0); return '₱' + n.toLocaleString(undefined,{minimumFractionDigits:2, maximumFractionDigits:2}); }
    function pct(n){ if(!isFinite(n)) return '0.0%'; return (n).toFixed(1)+'%'; }
    function getPercent(val, total){ if(!total) return '0.0%'; return ((val/total)*100).toFixed(1)+'%'; }
    function trendChange(cur, prev){
      const diff = prev ? ((cur - prev) / prev) * 100 : 0;
      if (diff > 0) return `<span class="up">${pct(diff)} <i class="fas fa-arrow-up"></i></span>`;
      if (diff < 0) return `<span class="down">${pct(diff)} <i class="fas fa-arrow-down"></i></span>`;
      return `<span class="neutral">0.0% <i class="fas fa-arrows-alt-h"></i></span>`;
    }
    function mapPresetToSvcRange(preset){
      // our service/product endpoints accept day|week|month|year
      if(preset==='today') return 'day';
      if(preset==='7d') return 'week';
      if(preset==='30d' || preset==='mtd') return 'month';
      if(preset==='ytd') return 'year';
      return 'week';
    }
    function getParams(){
      const p = { range: $('#presetRange').val(), compare: $('#compareMode').val() };
      const custom = $('#customRange').val();
      if (custom){
        const parts = custom.split(' - ');
        if(parts.length===2){
          p.range = 'custom';
          p.start = parts[0];
          p.end   = parts[1];
        }
      }
      return p;
    }
    function buildDownloadUrl(base){
      const p = getParams();
      const u = new URL(base, window.location.origin);
      // only pass start/end for custom range (Excel/CSV already defaults when absent)
      if (p.range==='custom' && p.start && p.end){
        u.searchParams.set('start', p.start);
        u.searchParams.set('end',   p.end);
      }
      return u.toString();
    }

    // ------- Charts -------
    let dailyChart=null, svcChart=null, prodChart=null;

    function renderDaily(labels, data, prevData){
      if (dailyChart) dailyChart.destroy();
      const ctx = document.getElementById('dailyChart');
      dailyChart = new Chart(ctx, {
        type:'line',
        data:{
          labels,
          datasets:[
            {
              label:'Revenue (₱)',
              data, fill:true, tension:0.35, borderWidth:2,
              borderColor:'#3378FF', backgroundColor:'rgba(51,120,255,.15)', pointRadius:2
            },
            ...(Array.isArray(prevData) && prevData.length ? [{
              label:'Prev Period',
              data: prevData, fill:false, tension:0.35, borderWidth:1.5,
              borderColor:'#999999', pointRadius:0
            }] : [])
          ]
        },
        options:{
          plugins:{ legend:{ display:true } },
          scales:{
            x:{ grid:{ display:false } },
            y:{ beginAtZero:true, grid:{ color:'#eef1f5' } }
          },
          maintainAspectRatio:false,
          responsive:true
        }
      });
    }

    function renderBar(canvasId, labels, data, label){
      const inst = (canvasId==='svcChart'?svcChart:prodChart);
      if (inst) inst.destroy();
      const ctx = document.getElementById(canvasId);
      const chart = new Chart(ctx, {
        type:'bar',
        data:{ labels, datasets:[{ data, label, borderRadius:6, backgroundColor:(canvasId==='svcChart'?'#90CAF9':'#FFECB3') }] },
        options:{
          plugins:{ legend:{ display:false } },
          scales:{ x:{ grid:{ display:false } }, y:{ beginAtZero:true, grid:{ color:'#f1f1f6' } } },
          maintainAspectRatio:false,
          responsive:true,
          indexAxis:'y'
        }
      });
      if (canvasId==='svcChart') svcChart = chart; else prodChart = chart;
    }

    // ------- Load data -------
    function loadReport(){
      const p = getParams();
      $.get('/admin/get-dashboard-stats', p, function(d){
        const s   = d.sales || {};
        const desc= d.descriptive || {};
        const cmp = s.comparison || {};

        // KPIs
        const totalRevenue = Number(s.totalRevenue||0);
        const totalProfit  = Number(s.profit||0);
        const txns         = Number(s.totalTransactions||0);
        const aov          = txns ? (totalRevenue/txns) : 0;
        const marginPct    = totalRevenue ? (totalProfit/totalRevenue)*100 : 0;

        $('#summaryRow').html(`
          <div class="kpi-card"><small>Total Revenue</small><h4>${peso(totalRevenue)}</h4><div class="kpi-sub">${trendChange(cmp.currentRevenue||0, cmp.prevRevenue||0)}</div></div>
          <div class="kpi-card"><small>Gross Profit</small><h4>${peso(totalProfit)}</h4><div class="kpi-sub">${trendChange(cmp.currentProfit||0, cmp.prevProfit||0)}</div></div>
          <div class="kpi-card"><small>Gross Margin</small><h4>${pct(marginPct)}</h4></div>
          <div class="kpi-card"><small>Transactions</small><h4>${txns}</h4><div class="kpi-sub">${trendChange(cmp.currentTransactions||0, cmp.prevTransactions||0)}</div></div>
          <div class="kpi-card"><small>Avg Order Value</small><h4>${peso(aov)}</h4></div>
        `);

        // Trend chart
        const labels = (s.trend && s.trend.labels) || [];
        const data   = (s.trend && s.trend.data) || [];
        renderDaily(labels, data, s.prevTrend || []);

        // Revenue by Service — use stats if present, else fallback to endpoint
        const svc = Array.isArray(desc.revenueByService) && desc.revenueByService.length ? desc.revenueByService : null;
        function fillService(rows){
          const total = rows.reduce((a,b)=>a+(b.total||b.revenue||0),0);
          $('#svcTable').html(`
            <thead><tr><th>Service</th><th class="text-right">Revenue</th><th class="text-right">%</th></tr></thead>
            <tbody>
              ${rows.map(x=>{
                const name = x._id || x.serviceName || '—';
                const val  = Number(x.total||x.revenue||0);
                return `<tr><td>${name}</td><td class="text-right">${peso(val)}</td><td class="text-right percent-cell">${getPercent(val,total)}</td></tr>`;
              }).join('')}
            </tbody>
          `);
          renderBar('svcChart', rows.map(x=>x._id||x.serviceName), rows.map(x=>Number(x.total||x.revenue||0)), 'By Service');
        }
        if (svc){
          fillService(svc);
        } else {
          const svcRange = mapPresetToSvcRange(p.range);
          $.get('/admin/get-sales-by-service', { range: svcRange }, function(x){
            fillService((x&&x.services)||[]);
          });
        }

        // Top 5 Products — use stats if present, else fallback
        const top = Array.isArray(desc.topSKUs) && desc.topSKUs.length ? desc.topSKUs.slice(0,5) : null;
        function fillProducts(rows){
          const prod = rows.slice(0,5);
          const total = prod.reduce((a,b)=>a+Number(b.revenue||b.sales||0),0);
          $('#prodTable').html(`
            <thead><tr><th>Product</th><th class="text-right">Revenue</th><th class="text-right">%</th></tr></thead>
            <tbody>
              ${prod.map(x=>{
                const name = x._id || x.productName || '—';
                const rev  = Number(x.revenue||x.sales||0);
                return `<tr><td>${name}</td><td class="text-right">${peso(rev)}</td><td class="text-right percent-cell">${getPercent(rev,total)}</td></tr>`;
              }).join('')}
            </tbody>
          `);
          renderBar('prodChart', prod.map(x=>x._id||x.productName), prod.map(x=>Number(x.revenue||x.sales||0)), 'By Product');
        }
        if (top){
          fillProducts(top);
        } else {
          const svcRange = mapPresetToSvcRange(p.range);
          $.get('/admin/get-sales-by-product', { range: svcRange }, function(x){
            fillProducts((x&&x.products)||[]);
          });
        }

        // Recent Transactions
        const tx = (s.transactions||[]).slice(-12).reverse();
        $('#txTable').html(`
          <thead><tr><th>Date</th><th>ID</th><th>Customer</th><th>Cashier</th><th>Items</th><th class="text-right">Amount</th></tr></thead>
          <tbody>
            ${tx.map(t=>`
              <tr>
                <td>${t.date||''}</td>
                <td>${t.id||''}</td>
                <td>${t.customer||'N/A'}</td>
                <td>${t.cashier||'N/A'}</td>
                <td>${t.items||''}</td>
                <td class="text-right">${peso(parseFloat(t.amount||0))}</td>
              </tr>
            `).join('')}
          </tbody>
        `);
      });
    }

    // ------- Date picker + events -------
    $(function(){
      $('#customRange').daterangepicker({
        autoUpdateInput:false, opens:'left',
        locale:{ cancelLabel:'Clear' }
      })
      .on('apply.daterangepicker', function(e, p){
        $(this).val(p.startDate.format('YYYY-MM-DD') + ' - ' + p.endDate.format('YYYY-MM-DD'));
        loadReport();
      })
      .on('cancel.daterangepicker', function(){
        $(this).val(''); loadReport();
      });

      $('#presetRange, #compareMode').change(loadReport);

      // Downloads (use your existing routes)
      $('#btnXlsx').on('click', ()=> window.open(buildDownloadUrl('/admin/downloadSalesExcel'), '_blank'));
      $('#btnCsv'). on('click', ()=> window.open(buildDownloadUrl('/admin/downloadSalesCSV'),  '_blank'));
      $('#btnPdf'). on('click', ()=> window.open(buildDownloadUrl('/admin/download-sales-report.pdf'), '_blank'));

      loadReport();
    });
  </script>
</body>
</html>
