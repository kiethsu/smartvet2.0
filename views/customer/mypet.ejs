<%
  // Fallback: if petDetails is not provided, default to empty structures.
  var petDetails = typeof petDetails !== 'undefined'
    ? petDetails
    : { species: [], speciesBreeds: {}, diseases: [] };
%>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>My Pet</title>
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <!-- SweetAlert2 CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <style>
    html, body {
      height: 100%;
      margin: 0;
    }
    .page-wrapper {
      height: 100vh;
      overflow-y: auto;
      padding: 15px;
      padding-bottom: 100px; /* extra bottom padding to avoid overlap */
      box-sizing: border-box;
    }
    .section-heading {
      font-weight: bold;
      margin-bottom: 1rem;
    }
    .card {
      border-radius: 0.5rem;
    }
    .btn-carolina {
      background-color: #4B9CD3;
      border-color: #4B9CD3;
      color: #fff;
    }
    .pet-card {
      width: 100px;
      text-align: center;
      padding: 10px;
      cursor: pointer;
      box-sizing: border-box;
    }
    #myPetsContainer {
      max-height: 500px;
      overflow-y: auto;
      display: flex;
      flex-wrap: wrap;
      justify-content: flex-start;
    }
    .default-pet-icon,
    .default-pet-icon-modal {
      border: 2px solid #4B9CD3;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: #4B9CD3;
    }
    .default-pet-icon {
      width: 80px;
      height: 80px;
      font-size: 40px;
    }
    .default-pet-icon-modal {
      width: 100px;
      height: 100px;
      font-size: 50px;
    }

    /* Mobile adjustments */
    @media (max-width: 576px) {
      .pet-card {
        width: 70px !important;
        margin: 5px !important;
      }
      .pet-card img,
      .default-pet-icon {
        width: 60px !important;
        height: 60px !important;
      }
      .pet-card p {
        width: 60px !important;
        font-size: 0.75rem;
      }
      #myPetsContainer {
        justify-content: center !important;
      }
    }
  </style>
</head>
<body>
  <div class="page-wrapper">
    <div class="container">
      <div class="row">
        <!-- PET DETAILS -->
        <div class="col-md-6 mb-4">
          <h4 class="section-heading">PET DETAILS</h4>
          <div class="card p-4 shadow-sm">
            <form id="petForm" class="text-left" onsubmit="return false;">
              <div class="form-group">
                <label for="petName">Pet Name</label>
                <input type="text" class="form-control" id="petName" placeholder="Enter pet name" />
              </div>
              <div class="form-group">
                <label for="species">Species</label>
                <select class="form-control" id="species">
                  <option value="">Select species</option>
                  <% petDetails.species.forEach(sp => { %>
                    <option value="<%= sp %>"><%= sp %></option>
                  <% }); %>
                </select>
              </div>
              <div class="form-group">
                <label for="petBreed">Pet Breed</label>
                <select class="form-control" id="petBreed">
                  <option value="">Select breed</option>
                </select>
              </div>
              <div class="form-group">
                <label for="petBirthday">Birthday</label>
                <input type="date" class="form-control" id="petBirthday" />
              </div>
              <div class="form-group">
                <label for="existingDisease">Existing Disease</label>
                <select class="form-control" id="existingDisease">
                  <option value="">Select disease</option>
                  <option value="None">None</option>
                  <option value="Other">Other</option>
                  <% petDetails.diseases.forEach(d => { %>
                    <option value="<%= d %>"><%= d %></option>
                  <% }); %>
                </select>
                <input type="text" class="form-control mt-2 d-none" id="otherDisease" placeholder="Specify disease" />
              </div>
              <div class="form-group">
                <label for="sex">Sex</label>
                <select class="form-control" id="sex">
                  <option value="">Select sex</option>
                  <option value="Male">Male</option>
                  <option value="Female">Female</option>
                </select>
              </div>
              <div class="form-group">
                <label for="petPic">Pet Picture</label>
                <input type="file" class="form-control-file" id="petPic" />
                <div id="petPicPreview" class="mt-2"></div>
              </div>
              <button type="button" class="btn btn-carolina btn-block" id="addPetButton">Add Pet</button>
            </form>
          </div>
        </div>

        <!-- MY PETS -->
        <div class="col-md-6 mb-4">
          <h4 class="section-heading">MY PETS</h4>
          <div class="card p-4 shadow-sm">
            <div id="myPetsContainer">
              <% if (pets && pets.length) { %>
                <% pets.forEach(pet => { %>
                  <div class="pet-card m-2"
                       data-id="<%= pet._id %>"
                       data-petname="<%= pet.petName %>"
                       data-species="<%= pet.species %>"
                       data-breed="<%= pet.breed %>"
                       data-birthday="<%= pet.birthday %>"
                       data-existingdisease="<%= pet.existingDisease %>"
                       data-sex="<%= pet.sex %>"
                       data-petpic="<%= pet.petPic || '' %>">
                    <% if (pet.petPic) { %>
                      <img src="<%= pet.petPic %>" 
                           class="img-fluid rounded-circle mb-2"
                           style="width:80px; height:80px; object-fit:cover; border:2px solid #4B9CD3;">
                    <% } else { %>
                      <div class="default-pet-icon mb-2">
                        <i class="fa-solid fa-paw"></i>
                      </div>
                    <% } %>
                    <p class="mb-0 text-center" style="width:80px;"><%= pet.petName %></p>
                  </div>
                <% }); %>
              <% } else { %>
                <p class="text-center w-100 mb-0">You have no pets.</p>
              <% } %>
            </div>
          </div>
        </div>
      </div><!-- end row -->
    </div><!-- end container -->
  </div><!-- end page-wrapper -->

  <!-- Pet Details Modal (for update, history & vetcard) -->
  <div class="modal fade" id="petDetailsModal" tabindex="-1" role="dialog" aria-labelledby="petDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="petDetailsModalLabel">Pet Details</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        
        <div class="modal-body">
          <!-- Pet image -->
          <div class="text-center mb-3" id="modalPetPicContainer">
            <!-- Initially an image element; will be replaced if no petPic -->
            <img id="modalPetPic" src="" alt="Pet Picture" class="img-thumbnail rounded-circle"
                 style="width:100px; height:100px; object-fit:cover; border: 2px solid #4B9CD3;">
          </div>
          <!-- Tab Buttons -->
          <div class="d-flex justify-content-center mb-3">
            <button type="button" class="btn btn-outline-primary mx-1" id="tabEdit">Edit</button>
            <button type="button" class="btn btn-outline-primary mx-1" id="tabHistory">History</button>
            <button type="button" class="btn btn-outline-primary mx-1" id="tabVetcard">Vetcard</button>
          </div>
          <!-- Tab Content -->
          <div id="modalTabContent">
            <!-- Edit Content -->
            <div id="modalEditContent">
              <div class="form-group">
                <label for="modalPetNameInput">Pet Name:</label>
                <input type="text" id="modalPetNameInput" class="form-control" readonly />
              </div>
              <div class="form-group">
                <label for="modalSpeciesInput">Species:</label>
                <input type="text" id="modalSpeciesInput" class="form-control" readonly />
              </div>
              <div class="form-group">
                <label for="modalBreedInput">Breed:</label>
                <input type="text" id="modalBreedInput" class="form-control" readonly />
              </div>
              <div class="form-group">
                <label for="modalBirthdayInput">Birthday:</label>
                <input type="date" id="modalBirthdayInput" class="form-control" readonly />
              </div>
              <div class="form-group">
                <label for="modalExistingDiseaseInput">Existing Disease:</label>
                <input type="text" id="modalExistingDiseaseInput" class="form-control" readonly />
              </div>
              <div class="form-group">
                <label for="modalSexInput">Sex:</label>
                <select id="modalSexInput" class="form-control" disabled>
                  <option value="Male">Male</option>
                  <option value="Female">Female</option>
                </select>
              </div>
            </div>
            <!-- History Content -->
            <div id="modalHistoryContent" class="d-none">
              <div id="petHistoryContainer">
                <!-- Pet consultation history will be loaded here via AJAX -->
              </div>
            </div>
            <!-- Vetcard Content -->
            <div id="modalVetcardContent" class="d-none"></div>
          </div>
        </div>
        
        <div class="modal-footer">
          <!-- For edit view -->
          <div id="modalEditFooter">
            <button type="button" id="updatePetBtn" class="btn btn-primary">Edit</button>
            <button type="button" id="savePetBtn" class="btn btn-success d-none">Save</button>
            <button type="button" id="deletePetBtn" class="btn btn-danger">Delete</button>
          </div>
          <!-- For other tabs, just a close button -->
          <button type="button" class="btn btn-secondary d-none" id="modalOtherCloseBtn" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <!-- jQuery and Bootstrap JS from CDN -->
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  
  <!-- SweetAlert2 JS (NEW) -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>
    $(document).ready(function () {
      // ----------------- PET FORM FUNCTIONALITY -----------------
      
      // Dynamic Breed Dropdown
      $('#species').on('change', function() {
        const selectedSpecies = $(this).val();
        const breedDropdown = $('#petBreed');
        breedDropdown.empty();
        breedDropdown.append('<option value="">Select breed</option>');
        if (selectedSpecies) {
          $.ajax({
            url: '/customer/get-pet-details',
            method: 'GET',
            success: function(updatedData) {
              const updatedBreeds = updatedData.speciesBreeds[selectedSpecies] || [];
              updatedBreeds.forEach(function(breed) {
                breedDropdown.append('<option value="' + breed + '">' + breed + '</option>');
              });
            },
            error: function(err) {
              console.error("Error fetching updated pet details", err);
            }
          });
        }
      });
      
      // Show/hide additional input for "Other" in Existing Disease dropdown
      $('#existingDisease').on('change', function(){
        if ($(this).val() === 'Other') {
          $('#otherDisease').removeClass('d-none');
        } else {
          $('#otherDisease').addClass('d-none').val('');
        }
      });
      
      // Image preview for pet picture in add-pet form
      $('#petPic').on('change', function () {
        const file = this.files[0];
        if (file) {
          const reader = new FileReader();
          reader.onload = function (e) {
            $('#petPicPreview').html(
              '<img src="' + e.target.result + '" alt="Pet Picture" class="img-thumbnail" style="width:100px; height:100px; object-fit:cover;">'
            );
          };
          reader.readAsDataURL(file);
        }
      });
      
      // Add Pet button handler
      $('#addPetButton').click(function (e) {
        e.preventDefault();
        var requiredFields = ['#petName', '#species', '#petBreed', '#petBirthday', '#existingDisease', '#sex'];
        var isValid = true;
        $.each(requiredFields, function (i, field) {
          if ($(field).val().trim() === '') {
            $(field).addClass('is-invalid');
            isValid = false;
          } else {
            $(field).removeClass('is-invalid');
          }
        });
        if ($('#existingDisease').val() === 'Other' && $('#otherDisease').val().trim() === '') {
          $('#otherDisease').addClass('is-invalid');
          isValid = false;
        } else {
          $('#otherDisease').removeClass('is-invalid');
        }

        // If fields are invalid, show SweetAlert error
        if (!isValid) {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Please fill all the fields correctly.'
          });
          return;
        }

        let existingDiseaseVal = $('#existingDisease').val();
        if (existingDiseaseVal === 'Other') {
          existingDiseaseVal = $('#otherDisease').val().trim();
        }

        // Use an empty string if no pet picture is provided so our card template shows the default icon.
        const petPicSrc = $('#petPicPreview img').attr('src') || '';
        const petData = {
          petName: $('#petName').val(),
          species: $('#species').val(),
          breed: $('#petBreed').val(),
          birthday: $('#petBirthday').val(),
          existingDisease: existingDiseaseVal,
          sex: $('#sex').val(),
          petPic: petPicSrc
        };
        
        $.ajax({
          url: '/customer/add-pet',
          method: 'POST',
          data: petData,
          success: function (response) {
            if (response.success) {
              // Build pet card HTML with conditional default icon if petPic is empty.
              const petPicHtml = petData.petPic
                ? `<img src="${petData.petPic}" alt="Pet" class="img-fluid rounded-circle" style="width:80px; height:80px; object-fit:cover; border: 2px solid #4B9CD3;">`
                : `<div class="default-pet-icon"><i class="fa-solid fa-paw"></i></div>`;
              const newPetCard = `
                <div class="pet-card m-2"
                  data-id="${response.pet._id || ''}"
                  data-petname="${petData.petName}"
                  data-species="${petData.species}"
                  data-breed="${petData.breed}"
                  data-birthday="${petData.birthday}"
                  data-existingdisease="${petData.existingDisease}"
                  data-sex="${petData.sex}"
                  data-petpic="${petData.petPic}"
                >
                  <div class="pet-image mb-2">
                    ${petPicHtml}
                  </div>
                  <p class="mb-0 pet-name">${petData.petName}</p>
                </div>
              `;
              $('#myPetsContainer').append(newPetCard);
              $('#petForm')[0].reset();
              $('#petForm input, #petForm select').removeClass('is-invalid');
              $('#petPicPreview').empty();
              
              // Show SweetAlert2 success pop-up
              Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Pet successfully added!'
              });
            } else {
              // If the server responded with success: false
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: response.message || 'There was an error adding the pet.'
              });
            }
          },
          error: function () {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'There was a server error adding the pet.'
            });
          }
        });
      });
      
      // ----------------- PET MODAL FUNCTIONALITY -----------------
      
      // Delegated click handler for pet cards so that even newly added cards are clickable
      $(document).on('click', '.pet-card', function () {
        var petId = $(this).data('id');
        var petName = $(this).data('petname');
        var species = $(this).data('species');
        var breed = $(this).data('breed');
        var birthday = $(this).data('birthday');
        var existingDisease = $(this).data('existingdisease');
        var sex = $(this).data('sex');
        var petPic = $(this).data('petpic');
  
        // Update modal pet picture: if petPic is empty, replace image with default icon div
        if (!petPic) {
          $('#modalPetPicContainer').html(
            '<div id="modalPetPic" class="default-pet-icon-modal"><i class="fa-solid fa-paw"></i></div>'
          );
        } else {
          $('#modalPetPicContainer').html(
            '<img id="modalPetPic" src="'+petPic+'" alt="Pet Picture" class="img-thumbnail rounded-circle" style="width:100px; height:100px; object-fit:cover; border: 2px solid #4B9CD3;">'
          );
        }
  
        $('#modalPetNameInput').val(petName);
        $('#modalSpeciesInput').val(species);
        $('#modalBreedInput').val(breed);
        $('#modalBirthdayInput').val(birthday);
        $('#modalExistingDiseaseInput').val(existingDisease);
        $('#modalSexInput').val(sex);
  
        // Set fields as readonly/disabled for edit view
        $('#modalPetNameInput, #modalSpeciesInput, #modalBreedInput, #modalBirthdayInput, #modalExistingDiseaseInput')
          .prop('readonly', true);
        $('#modalSexInput').prop('disabled', true);
  
        // Store the pet id on the update, save, and delete buttons for later use
        $('#updatePetBtn').data('id', petId).data('petname', petName);
        $('#savePetBtn').data('id', petId);
        $('#deletePetBtn').data('id', petId);
  
        // Default: show Edit tab
        $('#tabEdit').trigger('click');
        $('#petDetailsModal').modal('show');
      });
      
      // Toggle history details on clicking a history date
      $(document).on('click', '.history-date', function() {
        $(this).next('.collapse').collapse('toggle');
      });
      
      // Edit tab click: show edit content and footer
      $('#tabEdit').on('click', function() {
        $('#modalEditContent').removeClass('d-none');
        $('#modalHistoryContent, #modalVetcardContent').addClass('d-none');
        $('#modalEditFooter').removeClass('d-none');
        $('#modalOtherCloseBtn').addClass('d-none');
      });
      
      // History tab click: show history content and load history via AJAX
      $(document).on('click', '#tabHistory', function() {
  $('#modalHistoryContent').removeClass('d-none');
  $('#modalEditContent, #modalVetcardContent').addClass('d-none');
  $('#modalEditFooter').addClass('d-none');
  $('#modalOtherCloseBtn').removeClass('d-none');
  
  var petId = $('#updatePetBtn').data('id');
  var petName = $('#updatePetBtn').data('petname');
  
  if (petId || petName) {
    $.ajax({
      url: '/customer/get-pet-history',
      method: 'GET',
      data: { petId: petId, petName: petName },
      success: function(response) {
        if(response.success) {
          var historyHtml = '';
          var containerClass = response.history.length >= 5 ? 'history-container' : '';
          historyHtml += `<div class="${containerClass}">`;
          
            response.history.forEach(function(record, index) {
  historyHtml += 
    `<div class="history-record mb-2">
      <div class="history-date bg-light p-2" data-toggle="collapse" data-target="#historyRecord${index}" aria-expanded="false" aria-controls="historyRecord${index}" style="cursor:pointer;">
        ${formatVisitDate(record.date)}
      </div>
      <div class="collapse" id="historyRecord${index}">
        <div class="card card-body position-relative">
          <button type="button" class="close position-absolute" style="top:10px; right:10px;" onclick="$('#historyRecord${index}').collapse('hide')">
            <span aria-hidden="true">&times;</span>
          </button>
          <p><strong>Doctor:</strong> ${record.doctor && record.doctor.username ? record.doctor.username : 'Not Assigned'}</p>
          <p><strong>Consultation Notes:</strong> ${record.consultationNotes || 'N/A'}</p>
          <ul class="list-unstyled mb-0">
            ${record.medications.map(med => 
              `<li>
                <p><strong>Medication:</strong> ${med.medicationName}</p>
                <p><strong>Dosage:</strong> ${med.dosage}</p>
                <p><strong>Frequency:</strong> ${med.frequency}</p>
                ${ med.adminTime ? `<p><strong>Administration Time:</strong> ${med.adminTime}</p>` : '' }
                ${ med.additionalInstructions ? `<p><strong>Instructions:</strong> ${med.additionalInstructions}</p>` : '' }
                <p><strong>Quantity:</strong> ${med.quantity ? med.quantity : 'N/A'}</p>
              </li>`
            ).join('')}
          </ul>
        </div>
      </div>
    </div>`;
});

          historyHtml += `</div>`;
          $('#petHistoryContainer').html(historyHtml);
        } else {
          $('#petHistoryContainer').html('<p>No history available.</p>');
        }
      },
      error: function() {
        $('#petHistoryContainer').html('<p>Error loading history.</p>');
      }
    });
  }
});

      // Vetcard tab click: show vetcard content with a "Coming soon" message
      $('#tabVetcard').on('click', function() {
        $('#modalVetcardContent').removeClass('d-none');
        $('#modalEditContent, #modalHistoryContent').addClass('d-none');
        $('#modalEditFooter').addClass('d-none');
        $('#modalOtherCloseBtn').removeClass('d-none');
        $('#modalVetcardContent').html('<p class="text-center">Coming soon.</p>');
      });
      
      // Edit button inside modal: enable editing
      $('#updatePetBtn').on('click', function () {
        $('#modalPetNameInput, #modalSpeciesInput, #modalBreedInput, #modalBirthdayInput, #modalExistingDiseaseInput')
          .prop('readonly', false);
        $('#modalSexInput').prop('disabled', false);
        $('#updatePetBtn').addClass('d-none');
        $('#savePetBtn').removeClass('d-none');
      });
      
      // Save Pet Updates
      $('#savePetBtn').on('click', function() {
        var petId = $(this).data('id');
        var updatedData = {
          petName: $('#modalPetNameInput').val(),
          species: $('#modalSpeciesInput').val(),
          breed: $('#modalBreedInput').val(),
          birthday: $('#modalBirthdayInput').val(),
          existingDisease: $('#modalExistingDiseaseInput').val(),
          sex: $('#modalSexInput').val()
        };
        $.ajax({
          url: '/customer/update-pet/' + petId,
          method: 'PUT',
          data: updatedData,
          success: function(response) {
            if(response.success) {
              Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Pet details updated successfully!'
              }).then(() => {
                // Refresh to see the updated info in the pet card
                location.reload();
              });
            } else {
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: response.message || 'Error updating pet.'
              });
            }
          },
          error: function() {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'Server error while updating pet.'
            });
          }
        });
      });
      
      // Delete Pet
      $('#deletePetBtn').on('click', function() {
        var petId = $(this).data('id');
        Swal.fire({
          title: 'Delete Pet?',
          text: 'Are you sure you want to delete this pet?',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonText: 'Yes, delete it',
          cancelButtonText: 'Cancel'
        }).then((result) => {
          if (result.isConfirmed) {
            $.ajax({
              url: '/customer/delete-pet',
              method: 'POST',
              data: { id: petId },
              success: function(response) {
                if(response.success){
                  Swal.fire({
                    icon: 'success',
                    title: 'Deleted!',
                    text: 'Pet deleted successfully.'
                  }).then(() => {
                    location.reload();
                  });
                } else {
                  Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: response.message || 'Error deleting pet.'
                  });
                }
              },
              error: function() {
                Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: 'Server error deleting pet.'
                });
              }
            });
          }
        });
      });
    });
    
    // Example function if your code references it
    window.viewReservation = function(id) {
      $.ajax({
        url: '/doctor/get-consultation',
        method: 'GET',
        data: { reservationId: id },
        success: function(response) {
          if (response.success) {
            let detailsHtml = '';
            if (response.reservation.pets && response.reservation.pets.length > 0) {
              detailsHtml += '<strong>Pet(s):</strong> ' + response.reservation.pets.map(p => p.petName).join(', ') + '<br>';
            }
            if (response.reservation.concerns) {
              detailsHtml += '<strong>Customer Concerns:</strong> ' + response.reservation.concerns + '<br>';
            }
            detailsHtml += '<hr>';
            detailsHtml += '<strong>Consultation Notes:</strong><br>' + (response.reservation.consultationNotes || 'N/A') + '<br>';
            if (response.reservation.medications && response.reservation.medications.length > 0) {
              detailsHtml += '<hr><strong>Medication Details:</strong><br>';
              response.reservation.medications.forEach(function(med) {
                detailsHtml += 'Medication: ' + med.medicationName + '<br>';
                detailsHtml += 'Quantity: ' + med.quantity + '<br>';
                detailsHtml += 'Dosage: ' + med.dosage + '<br>';
                detailsHtml += 'Frequency: ' + med.frequency + '<br>';
                detailsHtml += 'Administration Time: ' + med.adminTime + '<br>';
                detailsHtml += med.additionalInstructions ? 'Additional Instructions: ' + med.additionalInstructions + '<br>' : '';
                detailsHtml += '<hr>';
              });
            }
            if (response.reservation.schedule && response.reservation.schedule.scheduleDate) {
              detailsHtml += '<hr><strong>Follow-Up Schedule:</strong><br>';
              detailsHtml += 'Date: ' + new Date(response.reservation.schedule.scheduleDate).toISOString().slice(0,10) + '<br>';
              detailsHtml += 'Details: ' + response.reservation.schedule.scheduleDetails + '<br>';
            }
            $("#consultationDetails").html(detailsHtml);
            $("#viewConsultationModal").modal("show");
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: response.message || 'Error fetching consultation details.'
            });
          }
        },
        error: function() {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Server error while fetching consultation details.'
          });
        }
      });
    };
    function formatVisitDate(date) {
  const d = new Date(date);
  const month = d.toLocaleString('en-US', { month: 'long' }).toLowerCase();
  const day = d.getDate();
  const year = d.getFullYear();
  return `${month} ${day} ${year}`;
}

  </script>
</body>
</html>
