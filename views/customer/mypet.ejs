<%
  // Fallback: if petDetails is not provided, default to empty structures.
  var petDetails = typeof petDetails !== 'undefined'
    ? petDetails
    : { species: [], speciesBreeds: {}, diseases: [] };
%>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>My Pets</title>

  <!-- Google Fonts -->
  <link
    href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
    rel="stylesheet"
  />

  <!-- Bootstrap & Font Awesome -->
  <link
    rel="stylesheet"
    href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
  />
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
  />

 <style>
  :root {
    --primary: #1E88E5;
    --primary-dark: #0D47A1;
    --accent: #90CAF9;
    --white: #ffffff;
    --text: #333;
    --background-color: #f4f7fa;
    --card-bg: #ffffff;
    --border-color: #eaeaea;
  }
  html, body {
    background-color: var(--background-color);
    font-family: 'Roboto', Arial, sans-serif;
    color: var(--text);
    margin: 0; padding: 0;
    min-height: 100vh;
    overflow-x: hidden;
  }
  .page-wrapper {
    min-height: 100vh;
    padding-bottom: 32px;
  }
  .container-fluid {
    padding-right: 16px;
    width: 100%;
  }
  .content-wrapper {
    display: flex;
    gap: 16px;
    align-items: stretch;        /* stretch both cards to equal height */
    width: 100%;
    margin-top: 8px;
  }
  .left {
    flex: 0 0 560px;
    max-width: 560px;
    padding-left: 12px;
  }
  .right {
    flex: 1 1 0;
    padding-right: 12px;
  }
  .card {
    border: 1px solid var(--border-color);
    border-radius: 16px;
    background: var(--card-bg);
    box-shadow:
      0 4px 24px rgba(30,136,229,0.12),
      0 1.5px 12px rgba(32,39,55,0.08);
    display: flex;               /* ensure content can flex vertically */
    flex-direction: column;
  }
  .custom-header {
    background: #f1f5fa;
    color: #444;
    font-weight: 600;
    font-size: .95rem;
    border-radius: 12px 12px 0 0;
    padding: 12px 18px;
    text-align: left;
    letter-spacing: .4px;
    margin: -1px -1px 0;
    display: flex;
    align-items: center;
    border-bottom: 1px solid rgba(0,0,0,0.08);
  }
  .form-card-body {
    padding: 24px;
  }
  .footer-hint {
    padding: 10px 16px;
    font-size: .65rem;
    color: #6c757d;
    text-align: center;
    background: rgba(0,0,0,0.03);
    border-top: 1px solid rgba(0,0,0,0.05);
    border-radius: 0 0 12px 12px;
    margin-top: auto;            /* push footer to bottom of card */
  }

  /* --- TABLE DESIGN --- */
  .reservation-table-wrapper {
    flex: 1;                     /* fill remaining vertical space */
    overflow-y: auto;            /* scroll vertically if table too tall */
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    background: #ffffff;
    box-shadow: 0 8px 30px rgba(32,39,55,0.08);
    border-radius: 0 0 16px 16px;
    margin-top: 0;
  }
  .reservation-table-wrapper table {
    width: 100%;
    margin: 0;
    border-collapse: collapse;
    font-size: 0.9rem;
  }
  .reservation-table-wrapper thead th {
    color: #444;
    font-weight: 600;
    border: none;
    padding: 10px 12px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    background: transparent;
    white-space: nowrap;
  }
  .reservation-table-wrapper tbody tr {
    transition: background .2s ease;
  }
  .reservation-table-wrapper tbody tr:nth-child(odd) {
    background: #f9fbfc;
  }
  .reservation-table-wrapper tbody tr:hover {
    background: #e8f1fb;
    cursor: pointer;
  }
  .reservation-table-wrapper td {
    padding: 12px 16px;
    vertical-align: middle;
    border-top: 1px solid #e8ecf1;
    color: #2f3e56;
    white-space: nowrap;
  }

  /* truncate long pet names with ellipsis */
  .pet-name-cell {
    max-width: 200px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    display: inline-block;
    vertical-align: middle;
  }

  .pet-table-pic {
    width: 38px; height: 38px;
    border-radius: 50%;
    object-fit: cover;
    margin-right: 12px;
    border: 2px solid var(--primary);
    background: #f2f5fa;
    display: inline-block;
    vertical-align: middle;
  }
  .pet-table-paw {
    width: 38px; height: 38px;
    border-radius: 50%;
    background: #f2f5fa;
    display: inline-flex;
    align-items: center; justify-content: center;
    margin-right: 12px;
    border: 2px solid var(--primary);
    font-size: 22px;
    color: var(--primary);
  }

  @media (max-width: 991.98px) {
    .content-wrapper {
      flex-wrap: wrap;
    }
    .left, .right {
      flex: 1 1 100%;
      max-width: 100%;
      padding: 0;
    }
    .left {
      margin-bottom: 16px;
    }
  }

  @media (max-width: 576px) {
    .reservation-table-wrapper {
      overflow-x: auto;
    }
    .reservation-table-wrapper table {
      width: 100% !important;
      table-layout: auto;
      min-width: 0;
    }
    .reservation-table-wrapper th,
    .reservation-table-wrapper td {
      white-space: nowrap;
      padding: 8px 6px;
    }
  }

  /* --- MODAL (unchanged) --- */
  .modal-backdrop {
    z-index: 2499 !important;
  }
  .modal {
    z-index: 3000 !important;
  }
  .swal2-container {
    z-index: 5001 !important;
  }
  .swal2-popup {
    z-index: 5002 !important;
  }
  .modal-dialog {
    max-width: 600px;
    width: 100%;
  }
  .modal-dialog-centered {
    display: flex;
    align-items: center;
    min-height: calc(100vh - 1.5rem);
  }
  .modal-content {
    border-radius: 12px;
    box-shadow: 0 8px 20px rgba(0,0,0,0.1);
    border: none;
    min-height: 520px;
    max-height: 90vh;
    display: flex;
    flex-direction: column;
  }
  .modal-header {
    border-bottom: none;
    padding: .5rem 1rem 0;
    display: flex;
    padding-left: 1.25rem;
  }
  .modal-header .nav-tabs {
    border-bottom: none;
    margin-bottom: 0;
  }
  .modal-header .nav-link {
    border: none;
    border-radius: 0;
    color: #555;
    font-weight: 500;
    padding: .5rem 1rem;
  }
  .modal-header .nav-link.active {
    background: var(--white);
    border-bottom: 3px solid var(--primary);
    color: var(--primary-dark);
  }
  .modal-body {
    padding: 1rem 1.5rem;
    max-height: 360px;
    overflow-y: auto;
    flex: 1;
  }
  #modalPetPicContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 1.5rem;
  }
  .pet-profile-circle {
    width: 120px; height: 120px;
    border-radius: 50%;
    background: linear-gradient(135deg, #4a90e2, #9013fe);
    padding: 5px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
  }
  .pet-profile-circle img {
    width: 100%; height: 100%;
    border-radius: 50%;
    object-fit: cover;
    background: #fff;
  }
  .modal-instruction-footer {
    padding: 10px 16px;
    font-size: .65rem;
    color: #6c757d;
    text-align: center;
    background: rgba(0,0,0,0.03);
    border-top: 1px solid rgba(0,0,0,0.05);
    border-radius: 0 0 12px 12px;
  }
  .modal-footer .btn {
    min-width: 90px;
    font-weight: 500;
  }
  .modal-footer.justify-content-between {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
  }
  @media (max-width: 576px) {
    .modal-dialog {
      max-width: 95% !important;
      margin: auto !important;
    }
    .modal-content {
      width: 100%;
    }
  }
</style>

</head>
<body>
  <div class="page-wrapper">
    <div class="container-fluid p-0">
      <div class="content-wrapper">

        <!-- Left: Pet Add Form -->
        <div class="left">
          <div class="card">
            <div class="custom-header">Pet Details</div>
            <div class="form-card-body">
              <form id="petForm" onsubmit="return false;">
                <div class="form-group">
                  <label for="petName">Pet Name</label>
                  <input
                    type="text"
                    class="form-control"
                    id="petName"
                    placeholder="Enter pet name"
                  >
                </div>
                <div class="form-group">
                  <label for="species">Species</label>
                  <select class="form-control" id="species">
                    <option value="">Select species</option>
                    <% petDetails.species.forEach(sp => { %>
                      <option value="<%= sp %>"><%= sp %></option>
                    <% }); %>
                  </select>
                </div>
                <div class="form-group">
                  <label for="petBreed">Pet Breed</label>
                  <select class="form-control" id="petBreed">
                    <option value="">Select breed</option>
                  </select>
                </div>
                <div class="form-group">
                  <label for="petBirthday">Birthday</label>
                  <input type="date" class="form-control" id="petBirthday">
                </div>
                <div class="form-group">
                  <label for="existingDisease">Existing Disease</label>
                  <select class="form-control" id="existingDisease">
                    <option value="">Select disease</option>
                    <option value="None">None</option>
                    <option value="Other">Other</option>
                    <% petDetails.diseases.forEach(d => { %>
                      <option value="<%= d %>"><%= d %></option>
                    <% }); %>
                  </select>
                  <input
                    type="text"
                    class="form-control mt-2 d-none"
                    id="otherDisease"
                    placeholder="Specify disease"
                  >
                </div>
                <div class="form-group">
                  <label for="sex">Sex</label>
                  <select class="form-control" id="sex">
                    <option value="">Select sex</option>
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                  </select>
                </div>
                <div class="form-group">
                  <label for="petPic">Pet Picture</label>
                  <input
                    type="file"
                    class="form-control-file"
                    id="petPic"
                  >
                  <div id="petPicPreview" class="mt-2"></div>
                </div>
                <button
                  type="button"
                  class="btn btn-primary btn-block"
                  id="addPetButton"
                >
                  Add Pet
                </button>
              </form>
            </div>
            <div class="footer-hint">
              Fill in the pet information and click “Add Pet.” Pet picture is optional.
            </div>
          </div>
        </div>

        <!-- Right: My Pets Table -->
        <div class="right">
          <div class="card">
            <div class="custom-header">My Pets</div>
            <div class="reservation-table-wrapper">
              <table class="table mb-0">
                <thead>
                  <tr>
                    <th>Pet Name</th>
                    <th>Breed</th>
                    <th>Species</th>
                  </tr>
                </thead>
                <tbody>
                  <%
                    const existingNames = new Set((pets||[]).map(p=>p.petName));
                    const walkinPets = (petListEntries||[])
                      .filter(e => !existingNames.has(e.petName))
                      .map(e => ({
                        _id: `list-${e._id}`,
                        petName: e.petName,
                        species: e.species,
                        breed: e.breed,
                        birthday: '',
                        existingDisease: '',
                        sex: '',
                        petPic: '',
                        addedFromReservation: true
                      }));
                    const allPets = [...(pets||[]), ...walkinPets];
                  %>
                  <% if (allPets.length > 0) { %>
                    <% allPets.forEach(pet => { %>
                      <tr
                        class="pet-row"
                        data-id="<%= pet._id %>"
                        data-petname="<%= pet.petName %>"
                        data-species="<%= pet.species %>"
                        data-breed="<%= pet.breed %>"
                        data-birthday="<%= pet.birthday %>"
                        data-existingdisease="<%= pet.existingDisease %>"
                        data-sex="<%= pet.sex %>"
                        data-petpic="<%= pet.petPic||'' %>"
                        data-addedfromreservation="<%= pet.addedFromReservation?'true':'false' %>"
                      >
                        <td>
                          <div class="pet-name-cell">
                            <% if (pet.petPic) { %>
                              <img
                                src="<%= pet.petPic %>"
                                alt="<%= pet.petName %>"
                                class="pet-table-pic"
                              >
                            <% } else { %>
                              <span class="pet-table-paw">
                                <i class="fa-solid fa-paw"></i>
                              </span>
                            <% } %>
                            <%= pet.petName || 'Unnamed' %>
                          </div>
                        </td>
                        <td><%= pet.breed || 'N/A' %></td>
                        <td><%= pet.species || 'N/A' %></td>
                      </tr>
                    <% }) %>
                  <% } else { %>
                    <tr>
                      <td colspan="3" class="text-center">You have no pets.</td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
            <div class="footer-hint">
              Click a pet row to view or edit details.
            </div>
          </div>
        </div>

      </div>
    </div>
  </div>

  <!-- Pet Details Modal -->
  <div
    class="modal fade"
    id="petDetailsModal"
    tabindex="-1"
    role="dialog"
    aria-hidden="true"
  >
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <!-- Header (tabs only) -->
        <div class="modal-header">
          <ul class="nav nav-tabs">
            <li class="nav-item">
              <a class="nav-link active" id="tabEdit" href="#">Profile Details</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" id="tabHistory" href="#">History</a>
            </li>
          </ul>
        </div>
        <div class="modal-body">
          <!-- Profile Details -->
          <div id="modalPetPicContainer">
            <div class="pet-profile-circle">
              <img id="modalPetPic" src="" alt="Pet Picture">
            </div>
            <button
              type="button"
              class="btn btn-sm btn-outline-primary"
              id="uploadPetPicBtn"
            >
              <i class="fa fa-upload"></i> Upload Image
            </button>
          </div>
          <div id="modalEditContent">
            <div class="form-group">
              <label for="modalPetNameInput">Pet Name</label>
              <input
                type="text"
                id="modalPetNameInput"
                class="form-control"
                readonly
              >
            </div>
            <div class="form-group">
              <label for="modalSpeciesInput">Species</label>
              <input
                type="text"
                id="modalSpeciesInput"
                class="form-control"
                readonly
              >
            </div>
            <div class="form-group">
              <label for="modalBreedInput">Breed</label>
              <input
                type="text"
                id="modalBreedInput"
                class="form-control"
                readonly
              >
            </div>
            <div class="form-group">
              <label for="modalBirthdayInput">Birthday</label>
              <input
                type="date"
                id="modalBirthdayInput"
                class="form-control"
                readonly
              >
            </div>
            <div class="form-group">
              <label for="modalExistingDiseaseInput">Existing Disease</label>
              <input
                type="text"
                id="modalExistingDiseaseInput"
                class="form-control"
                readonly
              >
            </div>
            <div class="form-group">
              <label for="modalSexInput">Sex</label>
              <select
                id="modalSexInput"
                class="form-control"
                disabled
              >
                <option value="Male">Male</option>
                <option value="Female">Female</option>
              </select>
            </div>
          </div>
          <div id="modalHistoryContent" class="d-none">
            <div id="petHistoryContainer"></div>
          </div>
        </div>
        <div class="modal-footer justify-content-between">
          <div id="modalEditFooter">
            <button
              type="button"
              id="updatePetBtn"
              class="btn btn-primary"
            >Edit</button>
            <button
              type="button"
              id="savePetBtn"
              class="btn btn-success d-none"
            >Save</button>
            <button
              type="button"
              id="deletePetBtn"
              class="btn btn-danger"
            >Delete</button>
          </div>
          <button
            type="button"
            class="btn btn-secondary"
            data-dismiss="modal"
          >Close</button>
        </div>
        <div class="modal-instruction-footer">
          Use the buttons below to edit or delete this pet.
          Switch to “History” to view past visits.
        </div>
      </div>
    </div>
  </div>

  <!-- JS Dependencies -->
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <script
    src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"
  ></script>
  <script
    src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"
  ></script>

  <script>
    $(document).ready(function () {
      // Populate breeds when species changes
      $('#species').on('change', function() {
        const selected = $(this).val(),
              dropdown = $('#petBreed');
        dropdown.empty().append('<option value="">Select breed</option>');
        if (selected) {
          $.get('/customer/get-pet-details', data => {
            (data.speciesBreeds[selected] || []).forEach(b => {
              dropdown.append(
                `<option value="${b}">${b}</option>`
              );
            });
          }).fail(console.error);
        }
      });

      // Other disease toggle
      $('#existingDisease').on('change', () => {
        const isOther = $('#existingDisease').val() === 'Other';
        $('#otherDisease').toggleClass('d-none', !isOther).val('');
      });

      // Preview pet picture
      $('#petPic').on('change', function() {
        const file = this.files[0];
        if (file) {
          const reader = new FileReader();
          reader.onload = e => {
            $('#petPicPreview').html(
              `<img src="${e.target.result}"
                    class="img-thumbnail"
                    style="width:100px;height:100px;object-fit:cover;">`
            );
          };
          reader.readAsDataURL(file);
        }
      });

      // Add Pet
      $('#addPetButton').click(e => {
        e.preventDefault();
        const fields = [
          '#petName','#species','#petBreed',
          '#petBirthday','#existingDisease','#sex'
        ];
        let valid = true;
        fields.forEach(f => {
          if (!$(f).val().trim()) {
            $(f).addClass('is-invalid');
            valid = false;
          } else {
            $(f).removeClass('is-invalid');
          }
        });
        if ($('#existingDisease').val() === 'Other' &&
            !$('#otherDisease').val().trim()) {
          $('#otherDisease').addClass('is-invalid');
          valid = false;
        }
        if (!valid) {
          return Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Please fill all fields.'
          });
        }
        const disease = $('#existingDisease').val() === 'Other'
                      ? $('#otherDisease').val().trim()
                      : $('#existingDisease').val();
        const picSrc = $('#petPicPreview img').attr('src') || '';
        const payload = {
          petName: $('#petName').val(),
          species: $('#species').val(),
          breed: $('#petBreed').val(),
          birthday: $('#petBirthday').val(),
          existingDisease: disease,
          sex: $('#sex').val(),
          petPic: picSrc
        };
     
  $.post('/customer/add-pet', payload, res => {
    if (res.success) {
      // 1) reset form & preview
      $('#petForm')[0].reset();
      $('#petPicPreview').empty();

      // 2) build new row
      const p = res.pet;
      const picHtml = p.petPic
        ? `<img src="${p.petPic}" class="pet-table-pic" alt="${p.petName}">`
        : `<span class="pet-table-paw"><i class="fa-solid fa-paw"></i></span>`;
      const newRow = $(`
        <tr class="pet-row"
            data-id="${p._id}"
            data-petname="${p.petName}"
            data-species="${p.species}"
            data-breed="${p.breed}"
            data-birthday="${p.birthday || ''}"
            data-existingdisease="${p.existingDisease}"
            data-sex="${p.sex}"
            data-petpic="${p.petPic || ''}"
            data-addedfromreservation="false">
          <td>
            <div class="pet-name-cell">
              ${picHtml}
              ${p.petName}
            </div>
          </td>
          <td>${p.breed || 'N/A'}</td>
          <td>${p.species || 'N/A'}</td>
        </tr>
      `);

      // 3) append to table
      $('.reservation-table-wrapper tbody').append(newRow);

      // 4) success message
      Swal.fire({
        icon: 'success',
        title: 'Success',
        text: 'Pet added!'
      });
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: res.message || 'Add failed.'
      });
    }
  }).fail(() => {
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'Server error.'
    });
  });
});
      // OPEN MODAL: Table row click
      $(document).on('click', '.pet-row', function() {
        const $c = $(this);
        const meta = {
          id: $c.data('id'),
          name: $c.data('petname'),
          species: $c.data('species'),
          breed: $c.data('breed'),
          birthday: $c.data('birthday'),
          disease: $c.data('existingdisease'),
          sex: $c.data('sex'),
          pic: $c.data('petpic'),
          added: $c.data('addedfromreservation')
        };
        // Picture
        if (meta.pic) {
          $('#modalPetPicContainer .pet-profile-circle').html(
            `<img src="${meta.pic}" alt="Pet Picture">`
          );
        } else {
          $('#modalPetPicContainer .pet-profile-circle').html(
            '<div style="font-size:48px;color:#fff;">' +
              '<i class="fa-solid fa-paw"></i>' +
            '</div>'
          );
        }
        $('#modalPetNameInput').val(meta.name);
        $('#modalSpeciesInput').val(meta.species);
        $('#modalBreedInput').val(meta.breed);
        $('#modalBirthdayInput').val(meta.birthday);
        $('#modalExistingDiseaseInput').val(meta.disease);
        $('#modalSexInput').val(meta.sex).prop('disabled', true);
        $('#modalEditContent input, #modalEditContent select')
          .prop('readonly', true);
        $('#updatePetBtn').data({ id: meta.id, added: meta.added });
        $('#savePetBtn').data('id', meta.id);
        $('#deletePetBtn').data('id', meta.id);
        $('#tabEdit').trigger('click');
        resetModalButtons();
        $('#petDetailsModal').modal('show');
      });

      // Tabs
      $('#tabEdit').click(function() {
        $(this).addClass('active');
        $('#tabHistory').removeClass('active');
        $('#modalEditContent').removeClass('d-none');
        $('#modalHistoryContent').addClass('d-none');
        $('#modalPetPicContainer').show();
        $('#modalEditFooter').removeClass('d-none');
      });
      $('#tabHistory').click(function() {
        $(this).addClass('active');
        $('#tabEdit').removeClass('active');
        $('#modalHistoryContent').removeClass('d-none');
        $('#modalEditContent').addClass('d-none');
        $('#modalPetPicContainer').hide();
        $('#modalEditFooter').addClass('d-none');
        const id = $('#updatePetBtn').data('id'),
              added = $('#updatePetBtn').data('added');
        $.get('/customer/get-pet-history', { petId: id, addedFromReservation: added }, resp => {
          if (resp.success) {
            let html = '<div class="' + (resp.history.length >= 5
                      ? 'history-container' : '') + '">';
            resp.history.forEach((r, i) => {
              const date = r.schedule?.scheduleDate || r.createdAt;
              html +=
                `<div class="history-record mb-3">
                   <div class="history-date bg-light p-2"
                        data-toggle="collapse" data-target="#hist${i}"
                        style="cursor:pointer;">
                     ${formatVisitDate(date)}
                   </div>
                   <div id="hist${i}" class="collapse">
                     <div class="card card-body position-relative">
                       <button type="button" class="close position-absolute"
                               style="top:10px;right:10px;"
                               onclick="$('#hist${i}').collapse('hide')">&times;</button>
                       ${r.concerns ? `<p><strong>Concern:</strong> ${r.concerns}</p>` : ''}
                       ${r.physicalExam ?
                         `<table class="physical-table mb-3">
                            <thead>
                              <tr>
                                <th>Weight</th><th>Temp</th><th>Obs</th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr>
                                <td>${r.physicalExam.weight || 'N/A'}</td>
                                <td>${r.physicalExam.temperature || 'N/A'}</td>
                                <td>${r.physicalExam.observations || 'N/A'}</td>
                              </tr>
                            </tbody>
                          </table>` : ''}
                       ${r.notes ? `<p><strong>Notes:</strong> ${r.notes}</p>` : ''}
                     </div>
                   </div>
                 </div>`;
            });
            html += '</div>';
            $('#petHistoryContainer').html(html);
          } else {
            $('#petHistoryContainer').html('<p>No history available.</p>');
          }
        }).fail(() => {
          $('#petHistoryContainer').html('<p>Error loading history.</p>');
        });
      });

      // Edit → Save toggle
      $('#updatePetBtn').click(function() {
        $('#modalEditContent input, #modalEditContent select')
          .prop('readonly', false);
        $('#modalSexInput').prop('disabled', false);
        $('#updatePetBtn').addClass('d-none');
        $('#savePetBtn').removeClass('d-none');
      });
      $('#petDetailsModal').on('hidden.bs.modal', function() {
        resetModalButtons();
        $('#tabEdit').addClass('active');
        $('#tabHistory').removeClass('active');
        $('#modalEditContent').removeClass('d-none');
        $('#modalHistoryContent').addClass('d-none');
        $('#modalPetPicContainer').show();
      });
      function resetModalButtons() {
        $('#savePetBtn').addClass('d-none');
        $('#updatePetBtn').removeClass('d-none');
      }

      // Save edits
      $('#savePetBtn').click(function() {
        const id = $(this).data('id');
        const updated = {
          petName: $('#modalPetNameInput').val(),
          species: $('#modalSpeciesInput').val(),
          breed: $('#modalBreedInput').val(),
          birthday: $('#modalBirthdayInput').val(),
          existingDisease: $('#modalExistingDiseaseInput').val(),
          sex: $('#modalSexInput').val()
        };
        $.ajax({
          url: '/customer/update-pet/' + id,
          method: 'PUT',
          data: updated,
          success(res) {
            if (res.success) {
              Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Updated!'
              }).then(() => location.reload());
            } else {
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: res.message || 'Update failed.'
              });
            }
          },
          error() {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'Server error.'
            });
          }
        });
      });

      // Delete
      $('#deletePetBtn').click(function() {
        const id = $(this).data('id');
        Swal.fire({
          title: 'Delete Pet?',
          text: 'Are you sure?',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonText: 'Yes, delete',
          cancelButtonText: 'Cancel'
        }).then(result => {
          if (result.isConfirmed) {
            $.post('/customer/delete-pet', { id }, res => {
              if (res.success) {
                Swal.fire({
                  icon: 'success',
                  title: 'Deleted!',
                  text: 'Pet removed.'
                }).then(() => location.reload());
              } else {
                Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: res.message || 'Delete failed.'
                });
              }
            }).fail(() => {
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Server error.'
              });
            });
          }
        });
      });

      function formatVisitDate(date) {
        const d = new Date(date);
        const month = d.toLocaleString('en-US',{month:'long'}).toLowerCase();
        return `${month} ${d.getDate()} ${d.getFullYear()}`;
      }
    });
  </script>
</body>
</html>
